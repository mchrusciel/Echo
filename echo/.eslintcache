[{"C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\index.js":"1","C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\store.js":"2","C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\App.js":"3","C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\TopBar.js":"4","C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\HomePage.js":"5","C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\FeedPage.js":"6","C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\requests.js":"7","C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\serviceWorker.js":"8"},{"size":555,"mtime":1611952522566,"results":"9","hashOfConfig":"10"},{"size":466,"mtime":1611952518709,"results":"11","hashOfConfig":"10"},{"size":753,"mtime":1611953240499,"results":"12","hashOfConfig":"10"},{"size":664,"mtime":1611870966318,"results":"13","hashOfConfig":"10"},{"size":2392,"mtime":1611953417433,"results":"14","hashOfConfig":"10"},{"size":1810,"mtime":1612302834200,"results":"15","hashOfConfig":"10"},{"size":170,"mtime":1612302857923,"results":"16","hashOfConfig":"10"},{"size":5868,"mtime":1611793318119,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1le4b4r",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\index.js",[],["37","38"],"C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\store.js",[],"C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\App.js",[],"C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\TopBar.js",["39"],"import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { withRouter } from \"react-router-dom\";\r\nfunction TopBar({ location }) {\r\n  return (\r\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">RSS App</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/\" active={location.pathname == \"/\"}>\r\n            Home\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\nexport default withRouter(TopBar);","C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\HomePage.js",["40","41","42","43","44"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./HomePage.css\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as yup from \"yup\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst querystring = require(\"querystring\");\r\n\r\n\r\n\r\nfunction HomePage({ feedsStore }) {\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [redirectToFeed, setRedirectToFeed] = useState(false);\r\n    /*const isValid = await schema.validate(evt);\r\n    if (!isValid) {\r\n      return;\r\n    }*/\r\n    //feedsStore.feeds.push(\"https://www.nasa.gov/rss/dyn/breaking_news.rss\");\r\n   // feedsStore.setFeeds(feedsStore.feeds);\r\n    //localStorage.setItem(\"feeds\", JSON.stringify(feedsStore.feeds));\r\n \r\n  const setSelectedFeed = url => {\r\n    feedsStore.setSelectedFeed(url);\r\n    setRedirectToFeed(true);\r\n  };\r\n  const deleteFeed = index => {\r\n    feedsStore.feeds.splice(index, 1);\r\n    feedsStore.setFeeds(feedsStore.feeds);\r\n    localStorage.setItem(\"feeds\", JSON.stringify(feedsStore.feeds));\r\n  };\r\n  useEffect(() => {\r\n    if (!initialized) {\r\n      let rssFeeds = [];\r\n      try {\r\n        rssFeeds = JSON.parse(localStorage.getItem(\"feeds\"));\r\n        if (Array.isArray(rssFeeds)) {\r\n          feedsStore.setFeeds(rssFeeds);\r\n        }\r\n      } catch (ex) {}\r\n      setInitialized(true);\r\n    }\r\n  });\r\n  if (redirectToFeed) {\r\n    return (\r\n      <Redirect to={`/feed?${querystring.encode({ url: feedsStore.feed })}`} />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"home-page\">\r\n      <h1 className=\"center\">RSS Feeds</h1>\r\n    \r\n\r\n      {feedsStore.feeds.map((f, i) => {\r\n        return (\r\n          <Card key={i}>\r\n            <Card.Title className=\"card-title\">Nasa Feed</Card.Title>\r\n            <Card.Body>\r\n              <p>{f}</p>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={setSelectedFeed.bind(this, f)}\r\n              >\r\n                Open\r\n              </Button>{\" \"}\r\n              <Button variant=\"primary\" onClick={deleteFeed.bind(this, i)}>\r\n                Delete\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nexport default observer(HomePage);\r\n\r\n\r\n","C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\FeedPage.js",["45","46","47","48","49"],"C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\requests.js",[],"C:\\Users\\milko\\Desktop\\Echo\\echo\\src\\serviceWorker.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":12,"column":56,"nodeType":"56","messageId":"57","endLine":12,"endColumn":58},{"ruleId":"58","severity":1,"message":"59","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":16},{"ruleId":"58","severity":1,"message":"62","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":12},{"ruleId":"58","severity":1,"message":"63","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":11},{"ruleId":"58","severity":1,"message":"64","line":9,"column":13,"nodeType":"60","messageId":"61","endLine":9,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":35,"column":3,"nodeType":"60","endLine":35,"endColumn":12,"suggestions":"67"},{"ruleId":"58","severity":1,"message":"64","line":7,"column":13,"nodeType":"60","messageId":"61","endLine":7,"endColumn":16},{"ruleId":"58","severity":1,"message":"68","line":9,"column":7,"nodeType":"60","messageId":"61","endLine":9,"endColumn":18},{"ruleId":"58","severity":1,"message":"69","line":15,"column":10,"nodeType":"60","messageId":"61","endLine":15,"endColumn":13},{"ruleId":"65","severity":1,"message":"70","line":39,"column":3,"nodeType":"60","endLine":39,"endColumn":12,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":52,"column":9,"nodeType":"74","endLine":52,"endColumn":33},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Formik' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Col' is defined but never used.","'yup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setInitialized'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [initialized, feedsStore] as a second argument to the useEffect Hook.",["77"],"'querystring' is assigned a value but never used.","'url' is assigned a value but never used.","React Hook useEffect contains a call to 'setUrl'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [initialized] as a second argument to the useEffect Hook.",["78"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Add dependencies array: [initialized, feedsStore]",{"range":"83","text":"84"},"Add dependencies array: [initialized]",{"range":"85","text":"86"},[1511,1511],", [initialized, feedsStore]",[1148,1148],", [initialized]"]